<%? {data, List} = Data %>
<% [print_log(Entry) || Entry <- List] %>
<%@ print_log([Time, Type, Node, Msg]) when is_list(Time), is_atom(Type), is_atom(Node) %>
<pre class="logs">
<span class="<% atom_to_list(Type) %>">= <% string:left(atom_to_list(Type) ++ " ", 22, $=) %> <% string:left(Time ++ " ", 32, $=) %></span> <span><% atom_to_list(Node) %></span>
<% lists:flatten(io_lib:format("~p", [Msg])) %>
</pre>
<%@ print_log([Time, Type, Node, Msg]) %>
<pre class="logs">
<% lists:flatten(io_lib:format("~p", [[Time, Type, Node, Msg]])) %>
</pre>
