#!/usr/bin/env escript

get_hostname() ->
  {ok, HostName} = inet:gethostname(),
  HostName.

get_node_name(WorkerName) ->
  list_to_atom(WorkerName ++ [$@] ++ get_hostname()).

start_temp_node() ->
  TempName = list_to_atom("killer" ++ os:getpid()),
  {ok,_} = net_kernel:start( [TempName, shortnames] ),
  case is_alive() of
    true -> ok;
    _ -> failed_to_start_network
  end.

connect_remote_node(Node) ->
  case net_kernel:connect_node(Node) of
    true -> ok;
    false -> error
  end.

kill_node(Node) ->
  spawn(Node,init,stop,[]),
  ok.

main([WorkerName]) ->
  Node = get_node_name(WorkerName),
  case start_temp_node() of
    ok ->
      ok;
    _ ->
      io:format("error starting distribution~n"),
      halt(1)
  end,
  case connect_remote_node(Node) of
    ok ->
      ok;
    _ ->
      io:format("error contacting ~p~n",[Node]),
      halt(1)
  end,
  io:format("stopping node ~p~n", [ Node ]),
  kill_node(Node);
  
main(_) -> io:format("usage: stop_node <worker name>~n").

